package system.design.parkinglot.auth.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import system.design.parkinglot.auth.Entity.AdminLogin;
import system.design.parkinglot.auth.service.LoginService;

import java.util.Objects;
import java.util.Optional;

/**
 * if default spring security is added, then spring boot application will have it default userid as 'user'
 * and password will be generated by springboot application everytime.
 */

@Controller
@RequestMapping("/user/admin")
public class LoginController {

    private LoginService service;

    @Autowired
    public LoginController(LoginService service) {
        this.service = service;
    }


    /*public String showLoginForm(Model model) {
      return "/user/admin/login";
    }*/
    @GetMapping("/login")
    public String showLoginForm(Model model) {
        AdminLogin login = new AdminLogin();

        model.addAttribute("login", login);

        return "auth/login/login-form";
    }

    @GetMapping("/validate")
    public String validateUser(@ModelAttribute("login") AdminLogin adminLogin) {

        //Code for Authenticating admin user
        if (Objects.isNull(adminLogin)) {
            throw new RuntimeException("Please provide data in login page." +
                    "\n Either UserId/Password filed is empty");
        }

        Optional<AdminLogin> loginUser = service.findByUserId(adminLogin.getUserId());
        if (loginUser.isPresent()) {
            return "redirect:/admin/showFloors";
        } else {
            throw new RuntimeException("UserId/passord is incorrect");
        }
    }
}
